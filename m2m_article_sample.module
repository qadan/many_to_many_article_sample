<?php

/**
 * @file
 * Hook implementations.
 */

/**
 * Implements hook_islandora_required_objects().
 */
function m2m_article_sample_islandora_required_objects(IslandoraTuque $connection) {
  // Stealing DS composite from book.
  $module_path = drupal_get_path('module', 'islandora_book');
  $datastreams_path = "$module_path/data/datastreams";
  // Article Content Model.
  $article_content_model = $connection->repository->constructObject('islandora:articleCModel');
  $article_content_model->owner = 'fedoraAdmin';
  $article_content_model->label = 'Islandora Article Content Model';
  $article_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $article_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'M');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'application/xml';
  $datastream->setContentFromFile("$datastreams_path/islandora_bookCModel_ds_composite_model.xml", FALSE);
  $article_content_model->ingestDatastream($datastream);
  return array(
    'm2m_article_sample' => array(
      'title' => 'Islandora Article',
      'objects' => array($article_content_model),
    ),
  );
}

/**
 * Implements hook_islandora_paged_content_content_model_registry().
 */
function m2m_article_sample_islandora_paged_content_content_model_registry() {
  return array(
    'islandora:articleCModel' => array(
      'parents' => array(
        'islandora:collectionCModel' => 'isMemberOfCollection',
      ),
      'children' => array(
        'islandora:pageCModel' => array(),
      ),
    ),
  );
}

/**
 * Implements hook_islandora_articleCModel_islandora_view_object().
 */
function m2m_article_sample_islandora_articleCModel_islandora_view_object($object) {
  $output = theme('islandora_book_book', array('object' => $object));
  return array('islandora_book' => $output);
}

/**
 * Implements hook_islandora_articleCModel_islandora_ingest_steps().
 */
function m2m_article_sample_islandora_articleCModel_islandora_ingest_steps(array $form_state) {
  return array(
    'm2m_article_sample_add_pages' => array(
      'type' => 'form',
      'weight' => 10,
      'form_id' => 'm2m_article_sample_add_pages_form',
      'args' => array(),
    ),
  );
}

/**
 * Sample form for adding pages.
 */
function m2m_article_sample_add_pages_form($form, &$form_state) {
  $form = array(
    'page_pids' => array(
      '#type' => 'textarea',
      '#title' => t('Page PIDs'),
      '#description' => t('Comma- or comma-and-space-separated PIDs of pages to add.'),
    ),
  );
  return $form;
}

/**
 * Submit handler for adding pages.
 */
function m2m_article_sample_add_pages_form_submit($form, $form_state) {
  // Get an array of page PIDs.
  $page_pids = array();
  if ($form_state['values']['page_pids']) {
    $page_pids = array_map('trim', explode(',', $form_state['values']['page_pids']));
  }
  // Start adding these to the book.
  $book = reset($form_state['islandora']['objects']);
  foreach ($page_pids as $page_pid) {
    $page = islandora_object_load($page_pid);
    if ($page) {
      $page->relationships->remove(ISLANDORA_RELS_EXT_URI, 'isPageOf', $book->id);
      $page->relationships->add(ISLANDORA_RELS_EXT_URI, 'isPageOf', $book->id);
      $page->relationships->remove(FEDORA_RELS_EXT_URI, 'isMemberOf', $book->id);
      $page->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOf', $book->id);
    }
  }
}

/**
 * Implements hook_islandora_articleCModel_islandora_object_purged().
 */
function m2m_article_sample_islandora_articleCModel_islandora_object_purged($pid) {
  $connection = islandora_get_tuque_connection();
  $query = <<<EOQ
PREFIX islandora-rels-ext: <http://islandora.ca/ontology/relsext#>
SELECT ?page
FROM <#ri>
WHERE {
  ?page islandora-rels-ext:isPageOf <info:fedora/$pid> .
}
EOQ;
  $results = $connection->repository->ri->sparqlQuery($query);
  foreach ($results as $result) {
    $page = islandora_object_load($result['page']['value']);
    $page->relationships->remove(ISLANDORA_RELS_EXT_URI, 'isPageOf', $pid);
    $page->relationships->remove(FEDORA_RELS_EXT_URI, 'isMemberOf', $pid);
    drupal_set_message(t('Removed association with page @page', array(
      '@page' => $page->id,
    )));
  }
}
